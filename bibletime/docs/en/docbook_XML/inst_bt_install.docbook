<chapter id="Program_Installation">
<title>Installation Information</title>

<section id="inst_a_1_Requirements"> <title> Requirements for
Bibletime and supporting programs</title>
<para>Bibletime is provided in many forms.  We hope that one of these will
support your system.
At this time we only support linux (and unix when you compile it
yourself).</para>

<table>
<title>Bibletime Program File Availability and Requirements</title>
<tgroup cols=5>
<thead>
<row>
<entry>filename</entry>
<entry>Version</entry>
<entry>Distribution</entry>
<entry>Requirements</entry>
<entry>description</entry
</row>
</thead>
<tbody>
<row>
<entry>bibletime-1.0-mandrake8.0.1mdk.i.586.rpm</entry>
<entry> 1.0 </entry>
<entry>Mandrake 8.0.1</entry>
<entry>qt2, KDE2, sword, processor class 586</entry>
<entry>qt2, KDE2 are provided with the distribution</entry>
</row>

<row>
<entry>bibletime-1.0.static.1mdk.rpm</entry>
<entry> 1.0 </entry>
<entry>unlisted distributions</entry>
<entry>any X window manager, linux, intel 586</entry>
<entry>This is the version with as many supporting programs compiled in
as possible.  This should run on almost any linux with a window manager.</entry>
</row>

<row>
<entry>bibletime-1.0.src.tar.gz</entry>
<entry> 1.0 </entry>
<entry>unlisted distributions or unix</entry>
<entry>kde2, qt2, compiler, make, sword</entry>
<entry>This is the compile it yourself version, it will support any
system running kde2 and qt2</entry> </row>
<row>
<entry></entry>
<entry></entry>
<entry></entry>
<entry></entry>
</row>
</tbody>
</tgroup>
</table>

</section>

<section id="inst_a_2_support"> <title>Supporting Programs</title>

<section id="inst_a_2_1_support"> <title>Determination of presence of supporting
programs.</title>

<para>Start your package manager.  Search for package qt.  If the package
description indicates that the version of qt on your system is 2.x.x (any
version of qt 2) then qt is correct.</para>
<para>Now search for package KDE.  If the package manager indicates that any
version of kde2 is installed, then your kde is correct.</para>
<para>If qt or kde are not correct, you can download and install qt2 and kde2
(in that order) or you can use the version of bibletime with qt2 and kde2
compiled in.</para>
<para>Now check to see if sword is installed on your system.  This is done by looking
at /usr/local/sword If the directory is not present, sword will need to be
installed.  Sword is not provided with any distributions at this time, so unless
you have previously installed it you probably will not find it.</para>
<para>You will also need to install Sword modules.  The easiest way to see what
is installed is to start bibletime and see what documents are available.  All
sword modules can be downloaded from crosswire.</para> </section>

<section id="inst_a_2_2_support"> <title>Installation of supporting programs</title>

<section id="inst_a_2_2_1_support"> <title>qt2</title>

<para>If you install your qt2 from an rpm, nothing more needs to be done.</para>
<para>If you install qt2 from a troll tech source, you will need to unzip the file
(using something like gnozip) and follow the directions in the file INSTALL.</para>
</section>

<section id="inst_a_2_2_2_support"> <title>kde2</title>

<para>If you install your kde2 from an rpm, nothing more needs to be
done.</para>
<para>If you install kde2 from the source or CVS at kde.org, you will need to
follow the installation directions for the file.</para>
</section>

<section id="inst_a_2_2_3_support"> <title>sword</title>

<para>If you install your sword from an rpm, nothing more needs to be
done.</para>
<para>If you install sword from the source or CVS at kde.org, you will need to
follow the installation directions in the INSTALL file.</para>
</section>
<section id="inst_a_2_2_4_support"> <title>sword modules</title>

<para>Sword modules can be downloaded from <ulink
url="http://www.crosswire.com"> crosswire bible society</ulink>.</para> <para>A
few sword modules are available as RPM's, however with the release of the
installmgr program the sword modules in *.zip files can be installed as easily
as the RPM's.  Modules can be installed and added to an existing installation at
any time.</para> <para>See the section <link linkend="sword_modules">working
with sword modules and installmgr.</link></para>
</section>

</section>

<section id="inst_a_2_3_environment"> <title>Environment variables</title>

<section id="inst_a_2_3_1_environment">
<title>Testing for environment variables and path</title>

<para>If you install from an RPM nothing needs to be done.  If you
compile yourself, you will need to set the environment variables.</para>
<para>in a bash shell, issue the
command export, you will see a listing like this:</para>
<Screen>declare -x KDEDIR="/usr"
declare -x KDE_INITIAL_DESKTOP="1"
declare -x LANG="en"
declare -x LANGUAGE="en_US:en"
declare -x LC_COLLATE="en_US"
declare -x LC_CTYPE="en_US"
declare -x LC_MESSAGES="en_US"
declare -x LC_MONETARY="en_US"
declare -x LC_NUMERIC="en_US"
declare -x LC_TIME="en_US"
declare -x LD_LIBRARY_PATH="/home/fks00/.kde/lib:/usr/lib"
declare -x PATH="/bin:/usr/bin:/usr/bin/X11:
/usr/local/bin:/usr/X11R6/bin:
/usr/games:/home/fks00/bin:
/usr/X11R6/bin:/usr/games:
/usr/X11R6/bin:/usr/games"
</screen>
<para>Examine this file these items must be set:</para>
<screen>
QTDIR=
KDEDIR=
KDEDIRS=
</screen>
<para>Also these items must be in your path command.  If see error messages
during the installation (or if bibletime is missing pieces, the most likely
cause is improperly set environmental variables.</para>
</section>
</section>

<section id="inst_a_2_3_2_environment"> <title>Setting environmental variables.</title>

<para>In a bash terminal in mandrake 7.2 use these commands (if you are using another
distribution, or installed qt or KDE2 from a source, you will need to figure out
the path names yourself):</para>
<screen>
export QTDIR=/usr/lib/qt2
export KDEDIR=/usr
export KDEDIRS=/usr
</screen>
<para>If you need to add the directories to your path statement use something
like</para>
<screen>
export PATH=$KDEDIRS/bin:$PATH
export PATH=$QTDIR:$PATH
export PATH=$KDEDIR:$PATH
</screen>
<para>Now the environmental variables will be set for the terminal
session.</para>
</section>
</section>

<section id="inst_a_3_Installation"> <title>Installing bibletime</title>
<section id="inst_a_3_1_BT_RPM"> <title>Installing bibletime from RPM</title>
<para>If you install your bibletime from an rpm, open your usual package
manager and install the RPM.  If you have missed anything package manager
will tell you.</para>
</section>
<section id="inst_a_3_2_BT_RPM"> <title>Installing bibletime from source.</title>
<para>open a bash terminal, as a regular user, then do the following:</para>
<screen>
cd unzipped_source_directory
#####################################
# Modify these as discussed in      #
# setting environment variables     #
# If the environment is already set,#
# this is not needed.               #
#####################################
export QTDIR=/usr/lib/qt2
export KDEDIR=/usr
export KDEDIRS=/usr
export PATH=$KDEDIRS/bin:$PATH
export PATH=$QTDIR:$PATH
export PATH=$KDEDIR:$PATH
#####################################
# For CVS users only                #
# make -f Makefile.cvs              #
# All other users skip to next line #
#####################################
./configure
make
#####################################
# Switch to super user mode         #
#####################################
su
password ****
make install

#####################################
#Launch bibletime                   #
#####################################
bibletime
</screen>
<para>The last command should launch bibletime.</para>
<para>bibletime installs fully integrated with KDE; however it may not operate
correctly if the environment variables are not set up correctly.  You can add
them to <filename>/$home/bash_profile</filename>to set these environmental
variables at startup</para><para>You will need to log out and log in for the kde
integration to become effective.</para>
</section>
<section id="inst_a_3_3_BT_CVS"> <title>Installing bibletime from CVS</title>
<para>Please see the instructions at <ulink
url="http://sourceforge.net/projects/bibletime">the sourceforge home page for
bibletime.</ulink></para> </section>
</section>
<section id="sword_modules"> <title>Working with sword modules using
installmgr</title> <para>First you must launch installmgr as root.  If
you are not root, you will not be able to write to the sword directory
unless you have given permission to the user that opens sword.</para>
<screen>
[fks00@localhost fks00]$ su
Password:
[root@localhost fks00]# installmgr
[root@localhost fks00]# /usr/local/bin/installmgr.
</Screen>
<para>
Installmgr will now open.  Under the <GUIMenu>options tab</GUIMenu> you have the
option of <guibutton>Local Path</guibutton> and <guibutton>Manage Remote
Sources</guibutton>.  <guibutton>Manage remote sources</guibutton> is useful if you have the sword CD
(it allows setting the path to the CD).  <guibutton>Local Path</guibutton> needs to be set to the
location of your unzipped modules.  Select any file in the top level directory,
and click on the OK.</para> <para>
Now the installmgr local window will be populated with all of the uninstalled
modules in your  The installed pane will display the modules already installed
into sword.
</para>
<para>
Use the buttons along the bottom of installmgr to work with the modules: </para>
<simplelist>
<member><guibutton>Info</guibutton> - displays the module info</member>
<member><guibutton>Select</guibutton> - selects a module for installation</member>
<member><guibutton>Select All</guibutton> - selects all of the modules for installation</member>
<member><guibutton>Install</guibutton> - installs all selected modules</member>
<member><guibutton>Remove</guibutton> - removes selected modules from the installed pane and places them in the
local pane.</member>
</simplelist>
<screenshot>
<screeninfo>installmgr</screeninfo>
<graphic fileref="common/sword_modules.png" format="png"></graphic>
</screenshot>
</section>
</chapter>

