GUI design
~~~~~~~~~~~~~~

Author:             Joachim Ansorg
EMail:              jansorg@gmx.de
Date started:       10-01-2000
Date last updated:  01-05-2000

================================================================================
This document describes the deign of BibleTime's GUI and how it should be
devided.

BibleTime's GUI will consist of two big parts: The groupmananger and the MDI
part. Using these two parts makes BibleTime easy to use because the user sees
a clear structure of the program: Organizing with the group-manager and
working in the MDI part.

Groupmanager:
-------------
With the help of the groupmanager the user organizes the modules and his own bookmarks in different groups.
At the first start of BibleTime there are only the modules in the different module-groups (e.g. Bibles, Commentaries ...).
Now the user could create new groups ("European bibles", "Own commentaries", "My bookmarks") and move the entries of other groups in his own ones or other groups.
The groupmanager handles two types of items: modules and bookmarks (=module entries).
Im against using a Tabbar like organisation, because this is sometimes confusing and unusable on screens with a small resolution.

MDI-Part:
---------
The MDI part contains specialized module presenters.
A module presenter is a widget which handles one module type (e.g. Bible presenter, commentary presenter)
and contains the parts to work with the module and a part to see the content of the module (e.g. a HTML widget for text based modules).
For example a lexikon presenter should contains some buttons to navigate in the module and a ComboBox which contains the items of the module.

The standard module presenters are:

-The Bible presenter: Provides functions to navigate in a bible.
-The Lexikon presenter: Provides functions to navigate in a lexikon like a ComboBox
which contains the entries of the lexikon in alphabetical order.
-The Commentary presenter: Contains the basic functions of the bible presenter but with buttons to add, delete or edit a comment
if the module is writable. To edit or create a comment we use the noteseditor (see below).

If the SWORD guys create new modules types, we'll integrate the corresponding module presenter (probably maps or audio sermons or ...).
The module presenters are _everytime_ inside the MDI area, every other window like search-analysis or the searchwindow has to be
outside the main window of BibleTime.
Using module presentes is more flexibel than using tabbars like we use BibleTime 0.2.
If we use module prsenters we have a open and easy extendable program.

We should add the possibility to view more than one bible in a bible presenter (-> parallel view of bible texts). This could be done by selecting
some modules in the groupmanager and to choose "RMB->View in one window". But probably there are better possibilities
(perhaps RMB on a module and "Add to presenter <List>" ? ).

Noteseditor:
------------
The noteseditor will be inside the commentary presenter. If a module is writable a button called edit will
be anabled which is used to switch between HTML<->Edit mode.
The noteseditor should support the saving to several markup languages like GBF or ThML;
the internal format is everytime the
same only the external format is different.
The external format is module dependant.

Drag & Drop:
------------
Drag&Drop is necessary to work with the text and with the groupmanager. For example you move entries in the group manager in other groups,
change the order of entries in a group, etc.. You could also drag verse-references from a translation in the groupmanager to create a new entry. It should
also be possible to drag verse-references in the noteseditor to insert the verse or te text of the verse (e.g. with pressing SHIFT).
You could also drop selected text of a module-presenter in the noteseditor or in other applications like StarOffice or KEdit.


================================================
Important classes of the frontend:
(I'm not sure if this list contains the things Torsten want to have but it'
the first time I made such a thing)

CGroupManager:
--------------
This class is the GUI part to manage the modules of SWORD and the user-made
bookmarks. The constructor should get a list of the available modules
(QList *<CModuleInfo>) and put them into the tree.

CModulePresenter:
-----------------
CModulePresenter is the baseclass of every module presnter. Every module
presenter must be retrieved from CModulePresenter. This class ontains basic
functions to work with a presenter from outside (e.g. set/get moduleinfo, refresh, etc).
Every presenter gets the aplliation wide
backend object as parameneterand the CModuleInfo object it presents.
The specialized module presenters overload the functions of this class and
contain new functions.

 	CBiblePresenter:
	----------------
	To present a bible-module.
	
	CommentaryPresenter:
	---------------------
	To present a commentary-module.
	Contains support for switching mode to edit mode and saving/deleting comments.

	CLexikonPresenter:
	------------------
	To present a lexikon-module.
